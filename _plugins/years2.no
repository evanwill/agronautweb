module Jekyll

  # Generator class invoked from Jekyll
  class YearGenerator < Generator
    def generate(site)
      site.data.argoyears.date.each do |date|
        site.pages << YearPage.new(site, 'year2', date)
      end
    end

  end
  
  # Actual page instances
  class YearPage < Page

    def initialize(site, dir, year)
      @site = site
      @dir = dir
      @year = year
      @layout = 'year'
      self.ext = '.html'
      self.basename = 'index'
      self.content = <<-EOS
test
      EOS
      self.data = {
          'layout' => @layout,
          'title' => "year #{@year}"
      }
    end

    def render(layouts, site_payload)
      payload = {
          'page' => self.to_liquid,
          'paginator' => pager.to_liquid
      }.merge(site_payload)
      do_layout(payload, layouts)
    end

    def to_liquid(attr = nil)
      self.data.merge({
                               'content' => self.content,
                               'year' => @year
                           })
    end

    def destination(dest)
      File.join('/', dest, @dir, @year, 'index.html')
    end

  end
end